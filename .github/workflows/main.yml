name: CI/CD

on:
  push:
  pull_request:

env:
  PROJECT_NAME: odh-mobility-api
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}-app
  DOCKER_TAG: ${{ github.sha }}
  JAVA_VERSION: '17'

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v5
      - name: Test code
        uses: noi-techpark/github-actions/maven-test@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          test-command: 'mvn -B test'

  # Deploy Test
  deploy-test:
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/main'
    needs: test
    environment: test
    concurrency: deploy-test
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          build-command: 'mvn -B -DskipTests package'

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/shrink/actions-docker-registry-tag
      - name: Add a "unstable" docker tag
        uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ github.event.repository.name }}-app
          target: ${{ env.DOCKER_TAG }}
          tags: |
            unstable
            
      - name: Customize values.yaml
        run: |
          yq -i '
            .image.repository="${{ env.DOCKER_IMAGE }}" |
            .image.tag="${{ env.DOCKER_TAG }}" |
            .image.pullPolicy="IfNotPresent" |

            .env.LOG_APPLICATION_VERSION="${{ env.DOCKER_TAG }}" |
            .oauth.clientSecret="${{ secrets.TEST_KEYCLOAK_CLIENT_SECRET }}"
          ' infrastructure/helm/test.yaml
      
      - name: Deploy on cluster  
        uses: noi-techpark/github-actions/helm-deploy@v2
        with:
          k8s-name: ninja-api
          k8s-namespace: core
          chart-path: infrastructure/helm/ninja-api
          values-file: infrastructure/helm/test.yaml
          aws-access-key-id: ${{ secrets[vars.AWS_KEY_ID] }}
          aws-secret-access-key: ${{ secrets[vars.AWS_KEY_SECRET] }}
          aws-eks-cluster-name: aws-main-eu-01
          aws-region: eu-west-1

  # Deploy Prod
  deploy-prod:
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/prod'
    needs: test
    environment: prod
    concurrency: deploy-prod
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          build-command: 'mvn -B -DskipTests package'

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/shrink/actions-docker-registry-tag
      - name: Add a "latest" docker tag
        uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ github.event.repository.name }}-app
          target: ${{ env.DOCKER_TAG }}
          tags: |
            latest
            
      - name: Customize values.yaml
        run: |
          yq -i '
            .image.repository="${{ env.DOCKER_IMAGE }}" |
            .image.tag="${{ env.DOCKER_TAG }}" |
            .image.pullPolicy="IfNotPresent" |

            .env.LOG_APPLICATION_VERSION="${{ env.DOCKER_TAG }}" |
            .oauth.clientSecret="${{ secrets.PROD_KEYCLOAK_CLIENT_SECRET }}"
          ' infrastructure/helm/prod.yaml
      
      - name: Deploy on cluster  
        uses: noi-techpark/github-actions/helm-deploy@v2
        with:
          k8s-name: ninja-api
          k8s-namespace: core
          chart-path: infrastructure/helm/ninja-api
          values-file: infrastructure/helm/prod.yaml
          aws-access-key-id: ${{ secrets[vars.AWS_KEY_ID] }}
          aws-secret-access-key: ${{ secrets[vars.AWS_KEY_SECRET] }}
          aws-eks-cluster-name: aws-main-eu-01
          aws-region: eu-west-1